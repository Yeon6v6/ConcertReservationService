-- 1. 기존 데이터 삭제
SET FOREIGN_KEY_CHECKS = 0;
TRUNCATE TABLE user;
TRUNCATE TABLE concert;
TRUNCATE TABLE concert_schedule;
TRUNCATE TABLE seat;
SET FOREIGN_KEY_CHECKS = 1;

-- 2. USER 테이블 데이터 삽입 (10만 명)
INSERT INTO user (id, balance) VALUES
                                   (1, 5000),
                                   (2, 10000),
                                   (3, 7500),
                                   (4, 0),
                                   (5, 2000);

INSERT INTO user (id, balance)
SELECT seq.user_id, FLOOR(RAND() * 10000) AS balance
FROM (
         SELECT @rownum := @rownum + 1 AS user_id
         FROM (SELECT @rownum := 5) r,
              (SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5
               UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9 UNION ALL SELECT 10) a,
              (SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5
               UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9 UNION ALL SELECT 10) b,
              (SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5
               UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9 UNION ALL SELECT 10) c
     ) seq
LIMIT 100000;


-- 3. CONCERT 테이블 데이터 삽입 (100개 콘서트 추가)
INSERT INTO concert (id)
SELECT seq.id FROM (
                       SELECT @rownum := @rownum + 1 AS id
                       FROM (SELECT @rownum := 0) r,
                            (SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5
                             UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9 UNION ALL SELECT 10) a,
                            (SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5
                             UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9 UNION ALL SELECT 10) b
                   ) seq
LIMIT 100;

-- 4. CONCERT_SCHEDULE 테이블 데이터 삽입 (100만 건)
INSERT INTO concert_schedule (concert_id, schedule_date, is_sold_out)
SELECT
    FLOOR(RAND() * 100 + 1) AS concert_id,
    DATE_ADD('2025-01-01', INTERVAL FLOOR(RAND() * 365) DAY) AS schedule_date,
    RAND() > 0.5 AS is_sold_out
FROM
    (SELECT 1 FROM (SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5
                    UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9 UNION ALL SELECT 10) AS t1) AS a
        CROSS JOIN
    (SELECT 1 FROM (SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5
                    UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9 UNION ALL SELECT 10) AS t2) AS b
        CROSS JOIN
    (SELECT 1 FROM (SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5
                    UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9 UNION ALL SELECT 10) AS t3) AS c
        CROSS JOIN
    (SELECT 1 FROM (SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5
                    UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9 UNION ALL SELECT 10) AS t4) AS d
        CROSS JOIN
    (SELECT 1 FROM (SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5
                    UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9 UNION ALL SELECT 10) AS t5) AS e
        CROSS JOIN
    (SELECT 1 FROM (SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5) AS t6) AS f;

-- SEAT 테이블 데이터 삽입 (각 콘서트 스케줄마다 50개 좌석)
INSERT INTO seat (seat_number, concert_id, schedule_date, status, price)
SELECT seat_number, concert_id, schedule_date, 'AVAILABLE', 50000
FROM (
         SELECT
             t.n AS seat_number,
             cs.schedule_date,
             cs.concert_id
         FROM concert_schedule cs
                  CROSS JOIN (
             SELECT 1 AS n UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5
             UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9 UNION ALL SELECT 10
             UNION ALL SELECT 11 UNION ALL SELECT 12 UNION ALL SELECT 13 UNION ALL SELECT 14 UNION ALL SELECT 15
             UNION ALL SELECT 16 UNION ALL SELECT 17 UNION ALL SELECT 18 UNION ALL SELECT 19 UNION ALL SELECT 20
             UNION ALL SELECT 21 UNION ALL SELECT 22 UNION ALL SELECT 23 UNION ALL SELECT 24 UNION ALL SELECT 25
             UNION ALL SELECT 26 UNION ALL SELECT 27 UNION ALL SELECT 28 UNION ALL SELECT 29 UNION ALL SELECT 30
             UNION ALL SELECT 31 UNION ALL SELECT 32 UNION ALL SELECT 33 UNION ALL SELECT 34 UNION ALL SELECT 35
             UNION ALL SELECT 36 UNION ALL SELECT 37 UNION ALL SELECT 38 UNION ALL SELECT 39 UNION ALL SELECT 40
             UNION ALL SELECT 41 UNION ALL SELECT 42 UNION ALL SELECT 43 UNION ALL SELECT 44 UNION ALL SELECT 45
             UNION ALL SELECT 46 UNION ALL SELECT 47 UNION ALL SELECT 48 UNION ALL SELECT 49 UNION ALL SELECT 50
         ) AS t
     ) temp;


